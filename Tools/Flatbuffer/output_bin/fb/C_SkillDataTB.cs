// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct C_SkillDataTB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static C_SkillDataTB GetRootAsC_SkillDataTB(ByteBuffer _bb) { return GetRootAsC_SkillDataTB(_bb, new C_SkillDataTB()); }
  public static C_SkillDataTB GetRootAsC_SkillDataTB(ByteBuffer _bb, C_SkillDataTB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_SkillDataTB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public fb.C_SkillDataTR? CSkillDataTRS(int j) { int o = __p.__offset(4); return o != 0 ? (fb.C_SkillDataTR?)(new fb.C_SkillDataTR()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CSkillDataTRSLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<fb.C_SkillDataTB> CreateC_SkillDataTB(FlatBufferBuilder builder,
      VectorOffset C_SkillDataTRSOffset = default(VectorOffset)) {
    builder.StartTable(1);
    C_SkillDataTB.AddCSkillDataTRS(builder, C_SkillDataTRSOffset);
    return C_SkillDataTB.EndC_SkillDataTB(builder);
  }

  public static void StartC_SkillDataTB(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddCSkillDataTRS(FlatBufferBuilder builder, VectorOffset CSkillDataTRSOffset) { builder.AddOffset(0, CSkillDataTRSOffset.Value, 0); }
  public static VectorOffset CreateCSkillDataTRSVector(FlatBufferBuilder builder, Offset<fb.C_SkillDataTR>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCSkillDataTRSVectorBlock(FlatBufferBuilder builder, Offset<fb.C_SkillDataTR>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCSkillDataTRSVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<fb.C_SkillDataTB> EndC_SkillDataTB(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.C_SkillDataTB>(o);
  }
  public static void FinishC_SkillDataTBBuffer(FlatBufferBuilder builder, Offset<fb.C_SkillDataTB> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedC_SkillDataTBBuffer(FlatBufferBuilder builder, Offset<fb.C_SkillDataTB> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
