// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct cskilldataTB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static cskilldataTB GetRootAscskilldataTB(ByteBuffer _bb) { return GetRootAscskilldataTB(_bb, new cskilldataTB()); }
  public static cskilldataTB GetRootAscskilldataTB(ByteBuffer _bb, cskilldataTB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public cskilldataTB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public fb.cskilldataTR? Cskilldatatrs(int j) { int o = __p.__offset(4); return o != 0 ? (fb.cskilldataTR?)(new fb.cskilldataTR()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CskilldatatrsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<fb.cskilldataTB> CreatecskilldataTB(FlatBufferBuilder builder,
      VectorOffset cskilldatatrsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    cskilldataTB.AddCskilldatatrs(builder, cskilldatatrsOffset);
    return cskilldataTB.EndcskilldataTB(builder);
  }

  public static void StartcskilldataTB(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddCskilldatatrs(FlatBufferBuilder builder, VectorOffset cskilldatatrsOffset) { builder.AddOffset(0, cskilldatatrsOffset.Value, 0); }
  public static VectorOffset CreateCskilldatatrsVector(FlatBufferBuilder builder, Offset<fb.cskilldataTR>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCskilldatatrsVectorBlock(FlatBufferBuilder builder, Offset<fb.cskilldataTR>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCskilldatatrsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<fb.cskilldataTB> EndcskilldataTB(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.cskilldataTB>(o);
  }
  public static void FinishcskilldataTBBuffer(FlatBufferBuilder builder, Offset<fb.cskilldataTB> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedcskilldataTBBuffer(FlatBufferBuilder builder, Offset<fb.cskilldataTB> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
